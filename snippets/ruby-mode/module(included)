# contributor: hbin <embrace.hbin@gmail.com>
# name : module ClassMethods ... end
# key: mod
# --
module ${1:`(let ((fn (capitalize (file-name-nondirectory
                                 (file-name-sans-extension
         (or (buffer-file-name)
             (buffer-name (current-buffer))))))))
           (cond
             ((string-match "_" fn) (replace-match "" nil nil fn))
              (t fn)))`}
  module ClassMethods
  end

  module InstanceMethods
  end

  def self.included(base)
    base.extend         ClassMethods
    base.send :include, InstanceMethods
  end
end
